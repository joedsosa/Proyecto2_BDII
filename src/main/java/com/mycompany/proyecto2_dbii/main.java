package com.mycompany.proyecto2_dbii;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Julian Benda√±a
 */
public class main extends javax.swing.JFrame {

    private String instanceSQlOrigen;
    private String portOrigen;
    private String databaseOrigen;
    private String userOrigen;
    private String passOrigen;
    private String instanceSQlDestino;
    private String portDestino;
    private String databaseDestino;
    private String userDestino;
    private String passDestino;

    /**
     * Creates new form main
     */
    public main() {
        initComponents();
        this.setLocationRelativeTo(null);
        JT_NombreInstancia.setText("sqlserverdb.c3rphpy5bbiu.us-east-1.rds.amazonaws.com");
        JT_NombreBD.setText("proyecto");
        JT_Puerto.setText("1433");
        JT_NombreUser.setText("admin");
        JT_Password.setText("admin123");
        
        JT_NombreInstancia1.setText("dbpostgre.c3rphpy5bbiu.us-east-1.rds.amazonaws.com");
        JT_NombreBD1.setText("proyecto");
        JT_Puerto1.setText("5432");
        JT_NombreUser1.setText("admin123");
        JT_Password1.setText("admin123");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListReplicando = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListSinReplicar = new javax.swing.JList<>();
        JB_Probar = new javax.swing.JButton();
        JT_Password = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JT_NombreUser = new javax.swing.JTextField();
        JT_Puerto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        JT_NombreBD = new javax.swing.JTextField();
        JT_NombreInstancia = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        JT_NombreInstancia1 = new javax.swing.JTextField();
        JT_NombreBD1 = new javax.swing.JTextField();
        JT_Puerto1 = new javax.swing.JTextField();
        JT_NombreUser1 = new javax.swing.JTextField();
        JT_Password1 = new javax.swing.JTextField();
        JB_Probar1 = new javax.swing.JButton();
        JB_Guardar = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel14.setText("Tablas BD Origen");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel15.setText("Sin Replicar");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel16.setText("Replicando");

        btnAgregar.setText(">>");
        btnAgregar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAgregarMouseClicked(evt);
            }
        });

        btnRemover.setText("<<");
        btnRemover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoverMouseClicked(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
        });

        btnCancelar.setText("Cancelar");

        jListReplicando.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListReplicando);

        jListSinReplicar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListSinReplicar);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addGap(80, 80, 80)
                                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jLabel14)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel16)
                .addGap(150, 150, 150))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(199, 199, 199))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JB_Probar.setText("Probar");
        JB_Probar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_ProbarMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Password");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Nombre usuario");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Puerto");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Nombre Base Datos");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre Instancia");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Base de Datos Origen");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Configuracion de Base de Datos");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel8.setText("Base de Datos Destino");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Nombre Instancia");

        JB_Probar1.setText("Probar");
        JB_Probar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_Probar1MouseClicked(evt);
            }
        });

        JB_Guardar.setText("Guardar");
        JB_Guardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_GuardarMouseClicked(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Password");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Nombre usuario");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Puerto");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Nombre Base Datos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(JT_NombreInstancia1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(4, 4, 4)
                                    .addComponent(JT_NombreBD1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel11)
                                    .addGap(85, 85, 85)
                                    .addComponent(JT_Puerto1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(27, 27, 27)
                                    .addComponent(JT_NombreUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addGap(68, 68, 68)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JB_Probar1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JT_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(27, 27, 27)
                                .addComponent(JT_NombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(JT_NombreInstancia))
                                .addComponent(jLabel1)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel6))
                                    .addGap(4, 4, 4)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(JT_NombreBD)
                                        .addComponent(JT_Puerto)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JB_Probar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JT_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(JB_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JT_NombreInstancia, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(JT_NombreBD, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(JT_Puerto, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JT_NombreUser, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(JT_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(JB_Probar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(JB_Guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JT_NombreInstancia1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(JT_NombreBD1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(JT_Puerto1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(JT_NombreUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(JT_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(JB_Probar1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JB_GuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_GuardarMouseClicked
        jFrame1.setLocationRelativeTo(null);
        jFrame1.setVisible(true);
        jFrame1.pack();
        this.setVisible(false);

        instanceSQlOrigen = JT_NombreInstancia.getText();
        databaseOrigen = JT_NombreBD.getText();
        portOrigen = JT_Puerto.getText();
        userOrigen = JT_NombreUser.getText();
        passOrigen = JT_Password.getText();

        instanceSQlDestino = JT_NombreInstancia1.getText();
        databaseDestino = JT_NombreBD1.getText();
        portDestino = JT_Puerto1.getText();
        userDestino = JT_NombreUser1.getText();
        passDestino = JT_Password1.getText();

        cargarTablasOrigen();

    }//GEN-LAST:event_JB_GuardarMouseClicked

    private void JB_ProbarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_ProbarMouseClicked
        // TODO add your handling code here:
        String instance = JT_NombreInstancia.getText();
        String database = JT_NombreBD.getText();
        String port = JT_Puerto.getText();
        String user = JT_NombreUser.getText();
        String password = JT_Password.getText();

        try {
            Connection conn = DatabaseConnection.getSQLServerConnection(instance, database, port, user, password);
            JOptionPane.showMessageDialog(null, "Conexi√≥n exitosa a la base de datos origen");
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de conexi√≥n: " + ex.getMessage());
        }

    }//GEN-LAST:event_JB_ProbarMouseClicked

    private void JB_Probar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_Probar1MouseClicked
        String instance = JT_NombreInstancia1.getText();
        String database = JT_NombreBD1.getText();
        String port = JT_Puerto1.getText();
        String user = JT_NombreUser1.getText();
        String password = JT_Password1.getText();

        try {
            Connection conn = DatabaseConnection.connectToPostgreSQL(instance, database, port, user, password);
            JOptionPane.showMessageDialog(null, "Conexi√≥n exitosa a la base de datos origen");
            conn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error de conexi√≥n: " + ex.getMessage());
        }
    }//GEN-LAST:event_JB_Probar1MouseClicked

    private void btnAgregarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAgregarMouseClicked
        List<String> selectedValues = jListSinReplicar.getSelectedValuesList();
        DefaultListModel<String> modelSinReplicar = (DefaultListModel<String>) jListSinReplicar.getModel();
        DefaultListModel<String> modelReplicando = (DefaultListModel<String>) jListReplicando.getModel();

        for (String value : selectedValues) {
            modelReplicando.addElement(value);
            modelSinReplicar.removeElement(value);
        }
    }//GEN-LAST:event_btnAgregarMouseClicked

    private void btnRemoverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoverMouseClicked
        List<String> selectedValues = jListReplicando.getSelectedValuesList();
        DefaultListModel<String> modelSinReplicar = (DefaultListModel<String>) jListSinReplicar.getModel();
        DefaultListModel<String> modelReplicando = (DefaultListModel<String>) jListReplicando.getModel();

        for (String value : selectedValues) {
            modelSinReplicar.addElement(value);
            modelReplicando.removeElement(value);

        }

    }//GEN-LAST:event_btnRemoverMouseClicked
    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked

        DefaultListModel<String> modelReplicando = (DefaultListModel<String>) jListReplicando.getModel();
        List<String> tablasAReplicar = Collections.list(modelReplicando.elements());

        // Guardar la lista de tablas a replicar en alg√∫n lugar (e.g., base de datos, archivo de configuraci√≥n)
        // Implementar aqu√≠ la l√≥gica para guardar las tablas seleccionadas

    }//GEN-LAST:event_btnGuardarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    public void ejecutarJobReplicacion() {
        try (Connection connSQL = DatabaseConnection.getSQLServerConnection(instanceSQlOrigen, databaseOrigen, portOrigen, userOrigen, passOrigen); Connection connPostgre = DatabaseConnection.connectToPostgreSQL(instanceSQlDestino, databaseDestino, portDestino, userDestino, passDestino)) {

            String query = "SELECT Operacion, Tabla, RegistroId FROM Bitacora WHERE Procesado = 0";
            Statement stmtSQL = connSQL.createStatement();
            ResultSet rs = stmtSQL.executeQuery(query);

            while (rs.next()) {
                String operacion = rs.getString("Operacion");
                String tabla = rs.getString("Tabla");
                int registroId = rs.getInt("RegistroId");

                if (operacion.equals("INSERT")) {
                    replicarInsert(connSQL, connPostgre, tabla, registroId);
                } else if (operacion.equals("UPDATE")) {
                    replicarUpdate(connSQL, connPostgre, tabla, registroId);
                } else if (operacion.equals("DELETE")) {
                    replicarDelete(connPostgre, tabla, registroId);
                }

                // Marca la operaci√≥n como procesada
                String update = "UPDATE Bitacora SET Procesado = 1 WHERE Operacion = ? AND Tabla = ? AND RegistroId = ?";
                PreparedStatement pstmt = connSQL.prepareStatement(update);
                pstmt.setString(1, operacion);
                pstmt.setString(2, tabla);
                pstmt.setInt(3, registroId);
                pstmt.executeUpdate();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void replicarInsert(Connection connSQL, Connection connPostgre, String tabla, int registroId) throws SQLException {
        // Recupera el registro completo de SQL Server
        String querySQL = "SELECT * FROM " + tabla + " WHERE Id = ?";
        PreparedStatement pstmtSQL = connSQL.prepareStatement(querySQL);
        pstmtSQL.setInt(1, registroId);
        ResultSet rs = pstmtSQL.executeQuery();

        if (rs.next()) {
            // Crea una inserci√≥n en PostgreSQL con los datos recuperados
            StringBuilder fields = new StringBuilder();
            StringBuilder values = new StringBuilder();
            for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
                if (i > 1) {
                    fields.append(", ");
                    values.append(", ");
                }
                fields.append(rs.getMetaData().getColumnName(i));
                values.append("?");
            }

            String insertPostgre = "INSERT INTO " + tabla + " (" + fields.toString() + ") VALUES (" + values.toString() + ")";
            PreparedStatement pstmtPostgre = connPostgre.prepareStatement(insertPostgre);

            for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
                pstmtPostgre.setObject(i, rs.getObject(i));
            }
            pstmtPostgre.executeUpdate();
        }
    }

    private void replicarUpdate(Connection connSQL, Connection connPostgre, String tabla, int registroId) throws SQLException {
        // Recupera el registro completo de SQL Server
        String querySQL = "SELECT * FROM " + tabla + " WHERE Id = ?";
        PreparedStatement pstmtSQL = connSQL.prepareStatement(querySQL);
        pstmtSQL.setInt(1, registroId);
        ResultSet rs = pstmtSQL.executeQuery();

        if (rs.next()) {
            // Crea una actualizaci√≥n en PostgreSQL con los datos recuperados
            StringBuilder setClause = new StringBuilder();
            for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
                if (i > 1) {
                    setClause.append(", ");
                }
                setClause.append(rs.getMetaData().getColumnName(i)).append(" = ?");
            }

            String updatePostgre = "UPDATE " + tabla + " SET " + setClause.toString() + " WHERE Id = ?";
            PreparedStatement pstmtPostgre = connPostgre.prepareStatement(updatePostgre);

            for (int i = 1; i <= rs.getMetaData().getColumnCount(); i++) {
                pstmtPostgre.setObject(i, rs.getObject(i));
            }
            pstmtPostgre.setInt(rs.getMetaData().getColumnCount() + 1, registroId);
            pstmtPostgre.executeUpdate();
        }
    }

    private void replicarDelete(Connection connPostgre, String tabla, int registroId) throws SQLException {
        // Elimina el registro en PostgreSQL
        String deletePostgre = "DELETE FROM " + tabla + " WHERE Id = ?";
        PreparedStatement pstmtPostgre = connPostgre.prepareStatement(deletePostgre);
        pstmtPostgre.setInt(1, registroId);
        pstmtPostgre.executeUpdate();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JB_Guardar;
    private javax.swing.JButton JB_Probar;
    private javax.swing.JButton JB_Probar1;
    private javax.swing.JTextField JT_NombreBD;
    private javax.swing.JTextField JT_NombreBD1;
    private javax.swing.JTextField JT_NombreInstancia;
    private javax.swing.JTextField JT_NombreInstancia1;
    private javax.swing.JTextField JT_NombreUser;
    private javax.swing.JTextField JT_NombreUser1;
    private javax.swing.JTextField JT_Password;
    private javax.swing.JTextField JT_Password1;
    private javax.swing.JTextField JT_Puerto;
    private javax.swing.JTextField JT_Puerto1;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListReplicando;
    private javax.swing.JList<String> jListSinReplicar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
private void cargarTablasOrigen() {
        String instance = JT_NombreInstancia.getText();
        String database = JT_NombreBD.getText();
        String port = JT_Puerto.getText();
        String user = JT_NombreUser.getText();
        String password = JT_Password.getText();

        DefaultListModel<String> model = new DefaultListModel<>();

        try (Connection conn = DatabaseConnection.getSQLServerConnection(instance, database, port, user, password)) {
            DatabaseMetaData metaData = conn.getMetaData();
            ResultSet tables = metaData.getTables(null, null, "%", new String[]{"TABLE"});

            while (tables.next()) {
                String tableName = tables.getString("TABLE_NAME");
                model.addElement(tableName);
            }

            jListSinReplicar.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al cargar las tablas: " + ex.getMessage());
        }
    }

}
